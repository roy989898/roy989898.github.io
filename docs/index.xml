<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal</title>
    <link>https://roy989898.github.io/</link>
    <description>Recent content on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Apr 2021 15:30:42 +0800</lastBuildDate><atom:link href="https://roy989898.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ai Tutorial 2</title>
      <link>https://roy989898.github.io/posts/ai-tutorial-2/</link>
      <pubDate>Thu, 22 Apr 2021 15:30:42 +0800</pubDate>
      
      <guid>https://roy989898.github.io/posts/ai-tutorial-2/</guid>
      <description>Build your Bear reconigize model Download image we use the Azure bing image search API
you need to apply the key for free
!pip install -Uqq fastbook import fastbook fastbook.setup_book() from fastbook import * from fastai.vision.widgets import * key = &amp;#39;secret_key_from_bing&amp;#39; import requests import matplotlib.pyplot as plt from PIL import Image from io import BytesIO def search_images_bing_min(search_term): subscription_key = &amp;#34;158558d991224dd9930aa6397b1f0b35&amp;#34; search_url = &amp;#34;https://api.bing.microsoft.com/v7.0/images/search&amp;#34; headers = {&amp;#34;Ocp-Apim-Subscription-Key&amp;#34; : subscription_key} # search_term = &amp;#34;grizzly bear&amp;#34; params = {&amp;#34;q&amp;#34;: search_term, &amp;#34;license&amp;#34;: &amp;#34;public&amp;#34;, &amp;#34;imageType&amp;#34;: &amp;#34;photo&amp;#34;,&amp;#34;count&amp;#34;:&amp;#39;150&amp;#39;} response = requests.</description>
      <content>&lt;h1 id=&#34;build-your-bear-reconigize-model&#34;&gt;Build your Bear reconigize model&lt;/h1&gt;
&lt;h2 id=&#34;download-image&#34;&gt;Download image&lt;/h2&gt;
&lt;p&gt;we use the Azure &lt;a href=&#34;https://www.microsoft.com/en-us/bing/apis/bing-image-search-api&#34;&gt;bing image search API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;you need to apply the key for free&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;pip install &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Uqq fastbook
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; fastbook
fastbook&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setup_book()

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastbook &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastai.vision.widgets &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;

key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;secret_key_from_bing&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; PIL &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Image
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; io &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BytesIO
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;search_images_bing_min&lt;/span&gt;(search_term):
  subscription_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;158558d991224dd9930aa6397b1f0b35&amp;#34;&lt;/span&gt;
  search_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.bing.microsoft.com/v7.0/images/search&amp;#34;&lt;/span&gt;
  headers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ocp-Apim-Subscription-Key&amp;#34;&lt;/span&gt; : subscription_key}
  &lt;span style=&#34;color:#75715e&#34;&gt;# search_term = &amp;#34;grizzly bear&amp;#34;&lt;/span&gt;
  params  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q&amp;#34;&lt;/span&gt;: search_term, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;imageType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;photo&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;150&amp;#39;&lt;/span&gt;}
  response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(search_url, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;headers, params&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;params)
  response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;raise_for_status()
  search_results &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json()
  &lt;span style=&#34;color:#75715e&#34;&gt;# ims=[img[&amp;#34;thumbnailUrl&amp;#34;] for img in search_results[&amp;#34;value&amp;#34;]]&lt;/span&gt;
  ims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;search_results[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ims
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;we can use the abovce function to down the image&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;search_images_bing_min(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;grizzly bear&amp;#34;&lt;/span&gt;)
len(ims)

&lt;span style=&#34;color:#75715e&#34;&gt;# ims is a string array&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;now we can download the iomage to the google drive&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;bear_types &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grizzly&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;teddy&amp;#39;&lt;/span&gt;
path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Path(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bearss&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists():
    path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mkdir()
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; o &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; bear_types:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(o)
  dest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (path&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;o)
  dest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mkdir(exist_ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
  results &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; search_images_bing_min(f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{o} bear&amp;#39;&lt;/span&gt;)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# print(results)&lt;/span&gt;
  ims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[img[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;contentUrl&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; img &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; results]
  &lt;span style=&#34;color:#75715e&#34;&gt;# print(ims)&lt;/span&gt;
  download_images(dest, urls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ims)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;clean the image,remove the fail image&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_image_files(path)
fns
failed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; verify_images(fns)
failed
&lt;span style=&#34;color:#75715e&#34;&gt;# if fail,remove it&lt;/span&gt;
failed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;map(Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unlink);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Ai Notes 1.2</title>
      <link>https://roy989898.github.io/posts/ai-tutorial-1.2/</link>
      <pubDate>Tue, 20 Apr 2021 16:00:14 +0800</pubDate>
      
      <guid>https://roy989898.github.io/posts/ai-tutorial-1.2/</guid>
      <description>Detail explain of the mechaine learning    Term Meaning     Term Meaning   Label The data that we&amp;rsquo;re trying to predict, such as &amp;ldquo;dog&amp;rdquo; or &amp;ldquo;cat&amp;rdquo;   Architecture The template of the model that we&amp;rsquo;re trying to fit; the actual mathematical function that we&amp;rsquo;re passing the input data and parameters to   Model The combination of the architecture with a particular set of parameters   Parameters The values in the model that change what task it can do, and are updated through model training   Fit Update the parameters of the model such that the predictions of the model using the input data match the target labels   Train A synonym for fit   Pretrained model A model that has already been trained, generally using a large dataset, and will be fine-tuned   Fine-tune Update a pretrained model for a different task   Epoch One complete pass through the input data   Loss A measure of how good the model is, chosen to drive training via SGD   Metric A measurement of how good the model is, using the validation set, chosen for human consumption   Validation set A set of data held out from training, used only for measuring how good the model is   Training set The data used for fitting the model; does not include any data from the validation set   Overfitting Training a model in such a way that it remembers specific features of the input data, rather than generalizing well to data not seen during training   CNN Convolutional neural network; a type of neural network that works particularly well for computer vision tasks    </description>
      <content>&lt;p&gt;Detail explain of the mechaine learning
&lt;img src=&#34;https://roy989898.github.io/img/ai_t/t1/train_loop.PNG&#34; alt=&#34;tl&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Term&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Term&lt;/td&gt;
&lt;td&gt;Meaning&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Label&lt;/td&gt;
&lt;td&gt;The data that we&amp;rsquo;re trying to predict, such as &amp;ldquo;dog&amp;rdquo; or &amp;ldquo;cat&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Architecture&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;template&lt;/em&gt; of the model that we&amp;rsquo;re trying to fit; the actual mathematical function that we&amp;rsquo;re passing the input data and parameters to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Model&lt;/td&gt;
&lt;td&gt;The combination of the architecture with a particular set of parameters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Parameters&lt;/td&gt;
&lt;td&gt;The values in the model that change what task it can do, and are updated through model training&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fit&lt;/td&gt;
&lt;td&gt;Update the parameters of the model such that the predictions of the model using the input data match the target labels&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Train&lt;/td&gt;
&lt;td&gt;A synonym for &lt;em&gt;fit&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pretrained model&lt;/td&gt;
&lt;td&gt;A model that has already been trained, generally using a large dataset, and will be fine-tuned&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fine-tune&lt;/td&gt;
&lt;td&gt;Update a pretrained model for a different task&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Epoch&lt;/td&gt;
&lt;td&gt;One complete pass through the input data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Loss&lt;/td&gt;
&lt;td&gt;A measure of how good the model is, chosen to drive training via SGD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Metric&lt;/td&gt;
&lt;td&gt;A measurement of how good the model is, using the validation set, chosen for human consumption&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Validation set&lt;/td&gt;
&lt;td&gt;A set of data held out from training, used only for measuring how good the model is&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Training set&lt;/td&gt;
&lt;td&gt;The data used for fitting the model; does not include any data from the validation set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Overfitting&lt;/td&gt;
&lt;td&gt;Training a model in such a way that it &lt;em&gt;remembers&lt;/em&gt; specific features of the input data, rather than generalizing well to data not seen during training&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CNN&lt;/td&gt;
&lt;td&gt;Convolutional neural network; a type of neural network that works particularly well for computer vision tasks&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    </item>
    
    <item>
      <title>Ai Notes 1.1</title>
      <link>https://roy989898.github.io/posts/ai-tutorial-1.1/</link>
      <pubDate>Tue, 20 Apr 2021 14:46:19 +0800</pubDate>
      
      <guid>https://roy989898.github.io/posts/ai-tutorial-1.1/</guid>
      <description>Your First Model on fastai framework
!pip install -Uqq fastbook import fastbook fastbook.setup_book() from fastbook import * #id first_training #caption Results from the first training from fastai.vision.all import * # get the cat do images path path = untar_data(URLs.PETS)/&amp;#39;images&amp;#39; def is_cat(x): return x[0].isupper() # because we are stuing the image so use ImageDataLoaders # valid_pct=0.2 meankeep 20 % photo image not use on training,for testing # label_func=is_cat mean get the tag of the imag,to detect # is the photos is a cat or dog,if photo name start by Upper case # ,than tha pohot is a cat # item_tfms=Resize(224) resize the photo to 224 dls = ImageDataLoaders.</description>
      <content>&lt;p&gt;Your First Model on fastai framework&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;pip install &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Uqq fastbook
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; fastbook
fastbook&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setup_book()



&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastbook &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;#id first_training&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#caption Results from the first training&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; fastai.vision.all &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# get the cat do images path&lt;/span&gt;
path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; untar_data(URLs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PETS)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_cat&lt;/span&gt;(x): &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isupper()
&lt;span style=&#34;color:#75715e&#34;&gt;# because we are stuing the image so use ImageDataLoaders&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# valid_pct=0.2 meankeep 20 % photo image not use on training,for testing&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# label_func=is_cat mean get the tag of the imag,to detect&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# is the photos is a cat or dog,if photo name start by Upper case&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ,than tha pohot is a cat&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# item_tfms=Resize(224) resize the photo to 224&lt;/span&gt;
dls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ImageDataLoaders&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;from_name_func(
    path, get_image_files(path), valid_pct&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;, seed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;,
    label_func&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;is_cat, item_tfms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Resize(&lt;span style=&#34;color:#ae81ff&#34;&gt;224&lt;/span&gt;))

learn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cnn_learner(dls, resnet34, metrics&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;error_rate)
learn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fine_tune(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)


&lt;span style=&#34;color:#75715e&#34;&gt;# use to create a upload button&lt;/span&gt;

uploader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; widgets&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FileUpload()
uploader


&lt;span style=&#34;color:#75715e&#34;&gt;# use the model to detect is your photo is a cat&lt;/span&gt;
img &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PILImage&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create(uploader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;data[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
is_cat,_,probs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; learn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;predict(img)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Is this a cat?: {is_cat}.&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Probability it&amp;#39;s a cat: {probs[1].item():.6f}&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Ai Notes 0</title>
      <link>https://roy989898.github.io/posts/ai-tutorial-0/</link>
      <pubDate>Mon, 19 Apr 2021 15:26:46 +0800</pubDate>
      
      <guid>https://roy989898.github.io/posts/ai-tutorial-0/</guid>
      <description>一向想學下 Machine laerning,見到有本幾好的書 寫給程式設計師的深度學習：使用fastai和PyTorch，決定一邊睇書，一邊寫有關本書的Notes，希望能夠完整完成.</description>
      <content>&lt;p&gt;一向想學下 Machine laerning,見到有本幾好的書 &lt;a href=&#34;https://www.books.com.tw/products/0010886129?sloc=main&#34;&gt;寫給程式設計師的深度學習：使用fastai和PyTorch&lt;/a&gt;，決定一邊睇書，一邊寫有關本書的Notes，希望能夠完整完成.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>為什麼寫這個Blog</title>
      <link>https://roy989898.github.io/posts/why/</link>
      <pubDate>Sun, 18 Apr 2021 15:21:54 +0800</pubDate>
      
      <guid>https://roy989898.github.io/posts/why/</guid>
      <description>就是想記錄一下學program和工作上的經歷 :)</description>
      <content>&lt;p&gt;就是想記錄一下學program和工作上的經歷 :)&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
